name: Tests

env:
  NODE_NO_WARNINGS: true
  NODE_OPTIONS: '--max-old-space-size=8192'
  CI: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  typecheck-15:
    name: Type Check on GraphQL v15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Master
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: 22

      - name: Use GraphQL v15
        run: node ./scripts/match-graphql.js 15
      - name: Install Dependencies using Yarn
        run: yarn install --ignore-engines && git checkout yarn.lock
      - name: Type Check
        run: yarn ts:check
  check:
    name: Full Check on GraphQL v16
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Master
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: 22
      - name: Prettier
        run: yarn prettier:check
      - name: Lint
        run: yarn lint
      - name: Build
        run: yarn build
      - name: Test ESM and CJS integrity
        run: yarn bob check
  test:
    name:
      Unit Test on Node ${{matrix.node-version}} (${{matrix.os}}) and GraphQL
      v${{matrix.graphql_version}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # remove windows to speed up the tests
        node-version: [18, 20, 22, 23]
        graphql_version:
          - 15
          - 16
        include:
          - node-version: 18
            os: windows-latest
            graphql_version: 16
    steps:
      - name: Checkout Master
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: ${{matrix.node-version}}

      - name: Use GraphQL v${{matrix.graphql_version}}
        run: node ./scripts/match-graphql.js ${{matrix.graphql_version}}
      - name: Install Dependencies using Yarn
        run: yarn install --ignore-engines && git checkout yarn.lock
      - name: Cache Jest
        uses: actions/cache@v4
        with:
          path: .cache/jest
          key:
            ${{ runner.os }}-${{matrix.node-version}}-${{matrix.graphql_version}}-jest-${{
            hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.node-version}}-${{matrix.graphql_version}}-jest-
      - name: Build
        run: yarn build
      - name: Unit Tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 5
          command: yarn test --ci
      - name: Leak Tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 5
          command: yarn test:leaks --ci
  test-bun:
    name: Unit Test on Bun (${{matrix.os}}) and GraphQL v${{matrix.graphql_version}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # remove windows to speed up the tests
        graphql_version:
          - 15
          - 16
    steps:
      - name: Checkout Master
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: 23

      - name: Use GraphQL v${{matrix.graphql_version}}
        run: node ./scripts/match-graphql.js ${{matrix.graphql_version}}
      - name: Install Dependencies using Yarn
        run: yarn install --ignore-engines && git checkout yarn.lock
      - name: Build
        run: yarn build
      - name: Unit Tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 5
          command: yarn test:bun --ci --reporter=junit --reporter-outfile=./junit.xml
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: './junit.xml'

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'javascript-typescript']
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/codeql/codeql-config.yml
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö https://git.io/JvXDl

      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
